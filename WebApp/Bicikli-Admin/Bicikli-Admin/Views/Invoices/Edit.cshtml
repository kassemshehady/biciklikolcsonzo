@model Bicikli_Admin.Models.SessionModel
@using Bicikli_Admin.Models
@using System.Collections.Generic
@{
    ViewBag.Title = "Számla szerkesztése";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(false)

    <fieldset>
        <legend>Ügyfél adatai</legend>

        @Html.HiddenFor(model => model.id)

        <table class="invisible">
            <tr>
                <td class="label-col">
                    @Html.LabelFor(model => model.name)
                </td>
                <td>
                    @Html.EditorFor(model => model.name)
                </td>
                <td class="validation-col">
                    <label>@Html.ValidationMessageFor(model => model.name, "(!)")</label>
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    @Html.LabelFor(model => model.address)
                </td>
                <td>
                    @Html.EditorFor(model => model.address)
                </td>
                <td class="validation-col">
                    <label>@Html.ValidationMessageFor(model => model.address, "(!)")</label>
                </td>
            </tr>
        </table>
    </fieldset>
    
    <fieldset>
        <legend>Számla adatai (nem módosítható)</legend>

        <table class="invisible">
            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.id)
                    </span>
                </td>
                <td>
                    @Html.DisplayFor(model => model.id)
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.startTime)
                    </span>
                </td>
                <td>
                    @if (Model.startTime != null)
                    {
                        @Html.DisplayFor(model => model.startTime)
                    }
                    else
                    {
                        @Html.Raw("-")
                    }
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.endTime)
                    </span>
                </td>
                <td>
                    @if (Model.endTime != null)
                    {
                        @Html.DisplayFor(model => model.endTime)
                    }
                    else
                    {
                        @Html.Raw("-")
                    }
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.paid)
                    </span>
                </td>
                <td>
                    @if (Model.paid)
                    {
                        @Html.Raw("Igen")
                    }
                    else
                    {
                        @Html.Raw("Nem")
                    }
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.lastReport)
                    </span>
                </td>
                <td>
                    @if (Model.lastReport != null)
                    {
                        @Html.DisplayFor(model => model.lastReport)
                    }
                    else
                    {
                        @Html.Raw("-")
                    }
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.bike_id)
                    </span>
                </td>
                <td>
                    @Html.ActionLink(Model.bikeModel.name, "Details", "Bikes", routeValues: new { id = Model.bike_id }, htmlAttributes: null)
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.totalTimeMinutes)
                    </span>
                </td>
                <td>
                    @if (Model.totalTimeMinutes != null)
                    {
                        @Html.DisplayFor(model => model.totalTimeMinutes)
                        @Html.Raw(" perc")
                    }
                    else
                    {
                        @Html.Raw("-")
                    }
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.normalTime)
                    </span>
                </td>
                <td>
                    @if (Model.normalTimeMinutes != null)
                    {
                        @Html.DisplayFor(model => model.normalTimeMinutes)
                        @Html.Raw(" perc")
                    }
                    else
                    {
                        @Html.Raw("-")
                    }
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.dangerousZoneTime)
                    </span>
                </td>
                <td>
                    @if (Model.dangerousZoneTimeMinutes != null)
                    {
                        @Html.DisplayFor(model => model.dangerousZoneTimeMinutes)
                        @Html.Raw(" perc")
                    }
                    else
                    {
                        @Html.Raw("-")
                    }
                </td>
            </tr>

            <tr>
                <td class="label-col">
                    <span class="labellike">
                        @Html.LabelFor(model => model.totalBalance)
                    </span>
                </td>
                <td>
                    @if (Model.totalBalance != null)
                    {
                        @Html.DisplayFor(model => model.totalBalance)
                        @Html.Raw(" Ft")
                    }
                    else
                    {
                        @Html.Raw("-")
                    }
                </td>
            </tr>
        </table>
    </fieldset>

    <div class="form-buttons">
        @if (Model.endTime == null)
        {
            <button name="submitButton" value="ForceEndSession" type="submit">Mentés és Kényszerített befejezés</button>
        }
        else if (!Model.paid)
        {
            <button name="submitButton" value="PaySession" type="submit">Mentés és Fizetés</button>
        }
        <button type="submit">Mentés</button>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
